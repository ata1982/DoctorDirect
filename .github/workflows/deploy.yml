name: Deploy Next.js App to Render

on:
  push:
    branches:
      - main # mainブランチへのプッシュ時にこのワークフローを実行
  workflow_dispatch: # 手動実行も可能

env:
  NODE_VERSION: '20'
  WORKING_DIRECTORY: ./doctor-direct-nextjs

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15 # ジョブ全体のタイムアウトを15分に設定
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Cache Node.js Modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Run TypeScript Type Check
        run: npm run type-check
        continue-on-error: true

      - name: Run Tests
        run: npm test --if-present --passWithNoTests
        continue-on-error: true

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        if: success()

      - name: Build Next.js Application
        run: npm run build
        if: success()

      - name: Trigger Render Deploy Hook
        run: |
          echo "Triggering Render Deploy Hook..."
          response=$(curl -s -w "\n%{http_code}" -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}")
          body=$(echo "$response" | sed '$d')
          http_code=$(echo "$response" | tail -n1)
          
          echo "Deploy Hook HTTP status: $http_code"
          echo "Deploy Hook response body: $body"
          
          if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then
            echo "✅ Deployment to Render triggered successfully!"
          else
            echo "❌ Deploy Hook failed with status: $http_code"
            exit 1
          fi
        if: success()

      - name: Deployment Succeeded
        if: success()
        run: echo "✅ Deployment to Render succeeded!"

      - name: Deployment Failed
        if: failure()
        run: echo "❌ Deployment to Render failed. Check logs for details."